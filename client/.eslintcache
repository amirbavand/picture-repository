[{"/app/src/index.js":"1","/app/src/routes.js":"2","/app/src/App.js":"3","/app/src/containers/login.js":"4","/app/src/containers/main.js":"5","/app/src/containers/uploadImage.js":"6","/app/src/containers/registerLogin.js":"7","/app/src/containers/register.js":"8","/app/src/containers/home.js":"9","/app/src/containers/profile.js":"10","/app/src/containers/productInformation.js":"11","/app/src/containers/imagePage.js":"12","/app/src/containers/Header.js":"13","/app/src/containers/Navbar/Navbar.js":"14","/app/src/containers/Button.js":"15","/app/src/containers/Navbar/MenuItems.js":"16"},{"size":569,"mtime":1612991614787,"results":"17","hashOfConfig":"18"},{"size":1428,"mtime":1613000142060,"results":"19","hashOfConfig":"18"},{"size":27,"mtime":1612990409914,"results":"20","hashOfConfig":"18"},{"size":1784,"mtime":1612914376866,"results":"21","hashOfConfig":"18"},{"size":1248,"mtime":1612915815056,"results":"22","hashOfConfig":"18"},{"size":3849,"mtime":1612923097389,"results":"23","hashOfConfig":"18"},{"size":1086,"mtime":1612906964875,"results":"24","hashOfConfig":"18"},{"size":2656,"mtime":1612882886792,"results":"25","hashOfConfig":"18"},{"size":1444,"mtime":1612832970486,"results":"26","hashOfConfig":"18"},{"size":3168,"mtime":1612915822839,"results":"27","hashOfConfig":"18"},{"size":2747,"mtime":1612478700691,"results":"28","hashOfConfig":"18"},{"size":1661,"mtime":1612478699063,"results":"29","hashOfConfig":"18"},{"size":208,"mtime":1612964132110,"results":"30","hashOfConfig":"18"},{"size":1250,"mtime":1613062919532,"results":"31","hashOfConfig":"18"},{"size":603,"mtime":1613059557445,"results":"32","hashOfConfig":"18"},{"size":457,"mtime":1595538072000,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"3zy2dd",{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/app/src/index.js",["79"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport Login from './containers/login'\nimport './styles/stylesheet.css'\nimport './styles/uploadImageStyle.css'\nimport {BrowserRouter as Router} from 'react-router-dom'\n\n\n\nReactDOM.render( <Router><Routes/></Router>,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n",["80","81"],"/app/src/routes.js",["82","83","84","85","86"],"import React, { Fragment } from 'react'\nimport { BrowserRouter as Router, Route, Link, Switch  } from 'react-router-dom';\nimport main from './containers/main'\nimport RegisterPage from './containers/register'\nimport home from './containers/home'\nimport Login from './containers/login'\nimport registerLogin from './containers/registerLogin'\nimport UploadImage from './containers/uploadImage'\nimport Profile from './containers/profile'\nimport Product from './containers/productInformation'\n\nimport ImagePresentation from './containers/imagePage'\nimport Header from './containers/Header';\n\n\n\nimport Navbar from \"./containers/Navbar/Navbar\";\n\n\n\n\n\n\n\n\n\n\n\nimport {withRouter} from 'react-router'\n\nconst Routes = ({location}) => (\n  <div>\n    {location.pathname !== '/login' && <Navbar/>}\n    <Switch>\n\n    <Route exact path=\"/\" component={main} />\n    <Route exact path=\"/register\" component={Header,RegisterPage} />\n    <Route exact path=\"/login\" component={Header,Login} />\n    <Route exact path=\"/home\" component={home} />\n    <Route exact path=\"/reglogin\" component={registerLogin} />\n    <Route exact path=\"/uploadimage\" component={UploadImage} />\n    <Route exact path=\"/:user_name\" component={ Profile} />\n    <Route exact path=\"/:user_name/:product_id\" component={Product} />\n    <Route exact path=\"/:user_name/:product_id/:image_id\" component={ImagePresentation} />\n\n\n</Switch>\n  </div>\n)\n\nexport default withRouter(Routes)\n\n\n\n","/app/src/App.js",["87","88"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["89","90"],"/app/src/containers/login.js",[],"/app/src/containers/main.js",["91"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\n\nclass main extends Component {\n  state = {\n    loggedIn: false,\n    xtoken: null,\n    checkLoginStatus: false\n    \n  };\n  \n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem('challange_token');\n\n    this.state.xtoken=token;\n    this.checkLoggedIn = this.checkLoggedIn.bind(this);\n\n\n\n\n    \n\n}\n\n\n\n\n  async componentDidMount() {\n    await this.checkLoggedIn();\n    console.log(this.state.loggedIn,\"yessssss\");\n\n    \n    console.log(\"I am checking\");\n    console.log(\"whaaaaaaaaaaaat\",this.state.loggedIn);\n    this.setState({ checkLoginStatus: true });\n\n\n\n  }\n\n\n  async checkLoggedIn() {\n    try {\n      const values = await axios.get('/api/',{ headers:{'x-access-token': this.state.xtoken}});\n      this.state.loggedIn=true;\n\n      return true;\n  } catch (error) {\n      return false;\n    }\n    \n  }\n\n\n\n\n  render() {\n    console.log(this.state.loggedIn);\n    if(!this.state.checkLoginStatus){\n      return <h4>loading the page</h4>\n    }\n    if(this.state.loggedIn){\n      return <Redirect to=\"/home\" />\n    }\n    console.log(\"salam\");\n\n    return <Redirect to=\"/reglogin\" />\n\n\n  }\n}\n\nexport default main;","/app/src/containers/uploadImage.js",["92","93","94"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass UploadImage extends Component {\n\n    state = {\n        file: null,\n        files: [],\n        fileName: null,\n        caption: null,\n        name: null,\n        xtoken: null,\n        isPrivate: false,\n        isPrivateeeee: false,\n        status: ''\n\n\n      };\n    \n\n    constructor(props) {\n        super(props);\n\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onChangeCaption = this.onChangeCaption.bind(this);\n        this.onChangeCheck = this.onChangeCheck.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n\n\n\n        console.log('hi');\n        const token = localStorage.getItem('challange_token');\n        console.log(token);\n        this.state.xtoken=token;\n\n    }\n\n\n    onFormSubmit(e){\n        e.preventDefault();\n        const formData = new FormData();\n        console.log(this.state.files,\"hiii\");\n\n        for (let i = 0; i < this.state.files.length; i++) {\n            console.log(\"hiiiiiii\");\n            formData.append(`myImage`, this.state.files[i]);\n    }\n    \n\n        formData.append('imageCaption',this.state.caption);\n        formData.append('isPrivate',this.state.isPrivate);\n\n\n\n        console.log(formData);\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data',\n                'x-access-token': this.state.xtoken\n            }\n        };\n        axios.post(\"write/upload\",formData,config)\n        .then((response) => {\n            console.log(response.data)\n            this.setState({status:\"successfully uploaded\"})\n        //    alert(\"The file is successfully uploaded\");\n        }).catch((error) => {\n            this.setState({status:\"error accourd\"})\n\n    });\n\n\n\n\n    }\n    onChange(e) {\n    //    this.setState({file:e.target.files[0], fileName:e.target.files[0].name});\n        this.setState({ files: [...this.state.files, ...e.target.files] })\n //       this.setState({file:e.target.files});\n\n\n        console.log(this.state.files);\n        \n    //    console.log(e.target.files[0].name);\n\n        \n    }\n\n    onChangeCaption(e) {\n        this.state.caption=e.target.value;\n        console.log(this.state.isPrivate);\n  //      this.setState({caption:e.target.value});\n\n\n  \n    }\n    onChangeName(e) {\n        this.state.name=e.target.value;\n        console.log(this.state.isPrivate);\n  \n    }   \n    onChangeCheck(e) {\n        this.state.isPrivate=!this.state.isPrivate;\n\n    }\n\n    render() {\n        return (\n\n         <div className=\"uploadForm\">\n            <div>\n                <h1>Upload</h1>\n            </div>\n\n            <form onSubmit={this.onFormSubmit}>\n                <div>\n                <input className=\"custom-file-input\" type=\"file\" multiple name=\"myImage\" onChange= {this.onChange} />\n\n                </div>\n                <div>\n                <button className=\"resetUploadedFiles\">Reset files</button>\n\n\n                </div>\n\n                <div>\n                <input className=\"uploadName\" type=\"text\" placeholder=\"Name\" maxLength=\"50\" onChange= {this.onChangeName} />\n\n                </div>                \n                <div>\n                <textarea className=\"uploadCaption\" placeholder=\"Write the caption with maximum 200 character here\" maxLength=\"500\" rows=\"15\" name=\"caption\" onChange={this.onChangeCaption} />\n\n                </div>\n\n                <div>\n                    Is it a private image?\n                    <input name=\"isPublic\" type=\"checkbox\"  onChange= {this.onChangeCheck} />\n                </div>\n                <div>\n                <button type=\"submit\">Upload</button>\n\n\n                </div>\n\n\n\n            </form>\n            <h1>{this.state.status}</h1>\n          </div> \n        )\n    }\n}\n\nexport default UploadImage","/app/src/containers/registerLogin.js",["95","96"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport Login from './login'\nimport RegisterPage from './register'\n\n\n\n\n\nclass registerLogin extends Component {\n\n\n    state = {\n\n      LoginMode: true,\n      buttonString: 'register',\n      xtoken: null\n\n\n    };\n\n    constructor(props) {\n      super(props);\n\n      this.onChange = this.onChange.bind(this);\n      \n\n  }\n\n\n\n    onChange(e) {\n      e.preventDefault();\n      if(this.state.LoginMode){\n        this.setState({LoginMode: false, buttonString: 'login'});\n      }\n      else{\n        this.setState({LoginMode: true, buttonString: 'register'});\n\n      }\n\n  }\n\n\n\n    render() {\n        console.log(this.state.LoginMode);\n        console.log(\"hiiiiiii\");\n\n\n      \n\n\n\n        return (\n          <div>\n            <div>\n\n                \n                {this.state.LoginMode && <Login></Login>}\n                {!this.state.LoginMode && <RegisterPage></RegisterPage>}\n\n            </div>\n          </div>\n    \n        );\n      }\n\n    \n\n}\n\nexport default registerLogin;\n","/app/src/containers/register.js",["97","98","99","100"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect, Link } from \"react-router-dom\";\n\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    isPublic: true,\n    status: ''\n\n\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeCheck = this.onChangeCheck.bind(this);\n\n\n \n}\n\n\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const data=new FormData(event.target);\n    const username=data.get('username');\n    const password=data.get('password');\n    const passwordConfirm=data.get('repeatPassword');\n    console.log(this.state.isPublic);\n    \n    if(password==passwordConfirm){\n        console.log(\"password_is_valid\");\n        try {\n          const values=await axios.post('api/register',{\"userName\": username, \"password\": password, \"isPublic\":this.state.isPublic} );\n          this.setState({status:\"successful\"})\n\n    \n        } catch (err) {\n          console.log(\"the username already exists\")\n          this.setState({status:\"some information was wrong or error accourd\"})\n\n    \n    \n        \n        }   \n    }\n    else{\n        console.log(\"repeat_password\");\n    }\n\n\n\n\n  };\n\n\n  onChangeCheck(e) {\n    this.state.isPublic=!this.state.isPublic;\n\n}\n\n\n\n  render() {\n\n    return (\n      <div className=\"form\">\n\n        <div>\n          <h1>Register</h1>\n        </div>\n\n        <form  onSubmit={this.handleSubmit}>\n            <div>\n                <input className=\"input_text\" type=\"text\" name=\"username\" placeholder=\"username\" id=\"username\" />\n            </div>\n            <div>\n                <input  className=\"input_text\" type=\"password\" name=\"password\" placeholder=\"password\" id=\"password\" />\n            </div>\n            <div>\n                <input className=\"input_text\" type=\"password\" name=\"repeatPassword\" placeholder=\"repeat password\" id=\"repeatPassword\" />\n            </div>\n\n\n            <div >\n            <label className=\"label\">Is it a private account?</label>\n\n            <input id='myLabel'  name=\"isPublic\" type=\"checkbox\" label=\"fdkm\"  onChange= {this.onChangeCheck} />\n\n\n\n            </div>\n            \n\n\n\n          <div>\n          <button type=\"submit\" className=\"submitButton\">submit</button>\n\n          </div>\n                  </form>\n        <div>\n            <h2>Already have an acoount, Login now</h2>\n            <br/>\n            \n\n          </div>\n          <div>\n            <Link to=\"/login\">\n          <button  className=\"register\" >Login</button>\n          </Link>\n\n\n          </div>\n      <div>\n        <h1>{this.state.status}</h1>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default RegisterPage;","/app/src/containers/home.js",["101","102","103"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect  } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\n\nclass home extends Component {\n    state = {\n      loggedIn: false,\n      xtoken: null,\n      checkLoginStatus: false\n    };\n\n\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem('challange_token');\n\n    this.state.xtoken=token;\n    this.checkLoggedIn = this.checkLoggedIn.bind(this);\n\n}\n\n\n\n    async componentDidMount() {\n      await this.checkLoggedIn();\n      console.log(this.state.loggedIn,\"yessssss\");\n  \n      \n      console.log(\"I am checking\");\n      console.log(\"whaaaaaaaaaaaat\",this.state.loggedIn);\n      this.setState({ checkLoginStatus: true });\n  \n  \n  \n    }\n\n\n  async checkLoggedIn() {\n    try {\n      const values = await axios.get('/api/',{ headers:{'x-access-token': this.state.xtoken}});\n      this.state.loggedIn=true;\n\n      return true;\n  } catch (error) {\n      return false;\n    }\n    \n  }\n    \n\n\n    render() {\n\n      if(!this.state.checkLoginStatus){\n        return (<h4>loading the page</h4>);\n      }\n      if(!this.state.loggedIn){\n        return (<Redirect to=\"/reglogin\" />);\n      }\n        return (\n          <div>\n\n            <Link to='/uploadimage'>\n              <button type=\"button\" className=\"btn btn-info\">Add a new image </button>\n            </Link>\n\n\n          </div>\n\n        );\n      }\n\n}\nexport default home;","/app/src/containers/profile.js",["104","105"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom'\n\n\n\nclass Profile extends Component {\n    state = {\n        notLogin: false,\n        xtoken: null,\n        ownProfile: false,\n        checkStatus: false,\n        file: null,\n        previewImagesList:[],\n        previewImagesKeyList:[],\n        productRoute: '',\n        clicked:false,\n        isPrivateAccount:''\n\n\n\n\n    };\n\n    constructor(props) {\n        super(props);\n        const token = localStorage.getItem('challange_token');\n        this.state.xtoken=token;\n\n    \n        this.checkLoggedIn = this.checkLoggedIn.bind(this);\n\n    \n    }\n    \n    async componentDidMount() {\n        await this.checkLoggedIn();\n    \n        \n        console.log(\"I am checking\");\n        console.log(\"whaaaaaaaaaaaat\",this.state.xtoken);\n        this.setState({ checkStatus: true });\n    \n    \n    \n      }\n\n      async checkLoggedIn() {\n        try {\n          const images_array=[];\n          const user_name = this.props.match.params.user_name;\n          console.log(user_name,\"this is username\");\n          console.log(this.state.xtoken);\n\n          const values = await axios.get('/read/profile',{ headers:{'x-access-token': this.state.xtoken, \"profileUserName\":user_name}});\n          if(values.data.massage=='this account is private'){\n            this.setState({isPrivateAccount:\"this account is protected\"});\n            return\n          }\n          console.log(values.data.product_keys);\n          console.log(values.data.image_preview_list);\n          const images=values.data.image_preview_list;\n          const f=\"data:image/png;base64,\"\n          for(const image in images){\n            console.log(images[image]);\n            const res=f.concat(images[image]);\n            images_array.push(res)\n\n\n\n          }\n\n          \n          const keys=values.data.product_keys;\n          console.log(\"this is image\",images);\n\n\n          this.setState({previewImagesList: images_array, previewImagesKeyList:  keys });\n\n     //     this.state.checkStatus=true;\n\n    \n          return true;\n      } catch (error) {\n        console.log(\"error accourddd\");\n        this.setState({notLogin: true});\n        \n        }\n        \n      }\n\n\n\n    render() {\n\n        const arraying=this.state.previewImagesList;\n        console.log(\"this is arraying\",arraying);\n\n        if(!this.state.checkStatus){\n            return <h4>loading the page</h4>\n          }\n        if(this.state.notLogin){\n          return <Redirect to=\"/login\" />\n\n        }\n\n\n\n\n        return (\n          <div>\n        <ul className=\"list-group\">\n            {arraying.map((arraying,index) => (\n\n               <Link to={\"/\"+this.props.match.params.user_name+\"/\"+this.state.previewImagesKeyList[index]} key={this.state.previewImagesKeyList[index]}>\n\n                <button onClick={this.handleClick} >\n\n        <           img src={arraying } width=\"400\" height=\"400\"/>\n            </button>\n            </Link>\n\n\n            ) )},\n        </ul>\n\n        <div>\n              {this.state.isPrivateAccount}\n        </div>\n\n\n\n\n\n          </div>\n    \n        );\n      }\n\n}\nexport default Profile;","/app/src/containers/productInformation.js",["106","107"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\n\n\n\n\n\nclass Product extends Component {\n    state = {\n        xtoken: null,\n        caption: '',\n        ownProfile: false,\n        checkStatus: false,\n        previewImagesList:[],\n        previewImagesKeyList:[]\n\n\n\n\n    };\n\n    constructor(props) {\n        super(props);\n        const token = localStorage.getItem('challange_token');\n        this.state.xtoken=token;\n\n    \n        this.checkLoggedInGetProductInformation = this.checkLoggedInGetProductInformation.bind(this);\n    \n    }\n    \n    async componentDidMount() {\n        await this.checkLoggedInGetProductInformation();\n    \n        \n\n\n        this.setState({ checkStatus: true });\n    \n    \n    \n      }\n\n      async checkLoggedInGetProductInformation() {\n        try {\n          const images_array=[];\n          const product_id = this.props.match.params.product_id;\n\n\n          const values = await axios.get('/read/productprofile',{ headers:{'x-access-token': this.state.xtoken, \"productId\":product_id}});\n          console.log(values.data);\n\n\n\n          \n          const images=values.data.image_preview_list;\n          const f=\"data:image/png;base64,\"\n          for(const image in images){\n\n            const res=f.concat(images[image]);\n            images_array.push(res)\n\n\n\n          }\n\n          \n          const keys=values.data.image_keys;\n          const caption=values.data.product_caption;\n          console.log(caption,\"this is caption\");\n\n          \n\n          this.setState({previewImagesList: images_array, previewImagesKeyList:  keys, caption:caption });\n\n     //     this.state.checkStatus=true;\n\n    \n          return true;\n      } catch (error) {\n          return false;\n        }\n        \n      }\n\n      handleClick(event){\n        event.preventDefault();\n\n    }\n    handleClick(){\n      console.log(\"hi\");\n    }\n    \n\n\n    render() {\n\n        const arraying=this.state.previewImagesList;\n\n        \n        if(!this.state.checkStatus){\n            return <h4>loading the page</h4>\n          }\n\n\n        return (\n          <div>\n              <h3>Caption</h3>\n\n            <p>{this.state.caption}</p>\n\n        <ul className=\"list-group\">\n            {arraying.map((arraying,index) => (\n               < Link to={\"/\"+this.props.match.params.user_name+\"/\"+this.props.match.params.product_id+\"/\"+this.state.previewImagesKeyList[index]} key={this.state.previewImagesKeyList[index]}>\n\n                <button onClick={this.handleClick}>\n                  <img src={arraying } width=\"400\" height=\"400\"/>\n\n                </button>\n                </Link>\n\n\n            ) )},\n        </ul>\n\n\n\n\n\n          </div>\n    \n        );\n      }\n\n}\nexport default Product;","/app/src/containers/imagePage.js",["108"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass ImagePresentation extends Component {\n    state = {\n        xtoken: null,\n        file: ''\n    };\n\n    constructor(props) {\n        super(props);\n        const token = localStorage.getItem('challange_token');\n        this.state.xtoken=token;\n\n    \n        this.checkLoggedInGetImage = this.checkLoggedInGetImage.bind(this);\n    \n    }\n\n    async componentDidMount() {\n        await this.checkLoggedInGetImage();\n    \n            \n    \n    \n      }\n\n      async checkLoggedInGetImage() {\n        try {\n          const product_id = this.props.match.params.product_id;\n          const image_id = this.props.match.params.image_id;\n          console.log(image_id,\"this is imageid\");\n          console.log(product_id,\"this is product id\");\n\n          const values = await axios.get('/read/originalphoto',{ headers:{'x-access-token': this.state.xtoken, \"productId\":product_id,  \"imageId\":image_id}});\n\n          const imgstr=(values.data.imagestr);\n          console.log(values.data);\n          const f=\"data:image/png;base64,\"\n          const res=f.concat(imgstr);\n\n\n          \n\n          this.setState({file: res  });\n\n     //     this.state.checkStatus=true;\n\n    \n          return true;\n      } catch (error) {\n          console.log(\"there is an error\");\n          return false;\n        }\n        \n      }\n\n\n\n\n    render() {\n    //    console.log(this.state.file);\n\n\n        return (\n          <div>\n              <h3>Caption</h3>\n              <img src={this.state.file } width=\"400\" height=\"400\"/>\n\n\n\n\n          </div>\n    \n        );\n\n      }\n\n\n\n\n}\n\n\nexport default ImagePresentation;\n","/app/src/containers/Header.js",[],"/app/src/containers/Navbar/Navbar.js",[],"/app/src/containers/Button.js",[],"/app/src/containers/Navbar/MenuItems.js",[],{"ruleId":"109","severity":1,"message":"110","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":13},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"109","severity":1,"message":"117","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"118","line":2,"column":27,"nodeType":"111","messageId":"112","endLine":2,"endColumn":33},{"ruleId":"109","severity":1,"message":"119","line":2,"column":42,"nodeType":"111","messageId":"112","endLine":2,"endColumn":46},{"ruleId":"120","severity":1,"message":"121","line":37,"column":52,"nodeType":"122","messageId":"123","endLine":37,"endColumn":53},{"ruleId":"120","severity":1,"message":"121","line":38,"column":49,"nodeType":"122","messageId":"123","endLine":38,"endColumn":50},{"ruleId":"109","severity":1,"message":"124","line":4,"column":35,"nodeType":"111","messageId":"112","endLine":4,"endColumn":40},{"ruleId":"109","severity":1,"message":"119","line":4,"column":42,"nodeType":"111","messageId":"112","endLine":4,"endColumn":46},{"ruleId":"113","replacedBy":"125"},{"ruleId":"115","replacedBy":"126"},{"ruleId":"109","severity":1,"message":"127","line":47,"column":13,"nodeType":"111","messageId":"112","endLine":47,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":92,"column":9,"nodeType":"130","endLine":92,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":100,"column":9,"nodeType":"130","endLine":100,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":105,"column":9,"nodeType":"130","endLine":105,"endColumn":19},{"ruleId":"109","severity":1,"message":"131","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"132","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":18},{"ruleId":"109","severity":1,"message":"132","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":35,"column":16,"nodeType":"135","messageId":"136","endLine":35,"endColumn":18},{"ruleId":"109","severity":1,"message":"127","line":38,"column":17,"nodeType":"111","messageId":"112","endLine":38,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":62,"column":5,"nodeType":"130","endLine":62,"endColumn":15},{"ruleId":"109","severity":1,"message":"118","line":2,"column":27,"nodeType":"111","messageId":"112","endLine":2,"endColumn":33},{"ruleId":"109","severity":1,"message":"124","line":2,"column":35,"nodeType":"111","messageId":"112","endLine":2,"endColumn":40},{"ruleId":"109","severity":1,"message":"127","line":43,"column":13,"nodeType":"111","messageId":"112","endLine":43,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":56,"column":33,"nodeType":"135","messageId":"136","endLine":56,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":119,"column":9,"nodeType":"139","endLine":119,"endColumn":67},{"ruleId":"140","severity":1,"message":"141","line":91,"column":5,"nodeType":"142","messageId":"136","endLine":93,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":118,"column":19,"nodeType":"139","endLine":118,"endColumn":66},{"ruleId":"137","severity":1,"message":"138","line":68,"column":15,"nodeType":"139","endLine":68,"endColumn":69},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'Fragment' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Route' is defined but never used.",["143"],["144"],"'values' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'axios' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-class-members","Duplicate name 'handleClick'.","MethodDefinition","no-global-assign","no-unsafe-negation"]